version: '3.8'

services:
  minio:
    image: quay.io/minio/minio:latest
    ports:
      - "9000:9000"
      - "9090:9090"
    entrypoint: >
      sh -c "
        minio server /data --console-address ':9090' &
        sleep 5 &&
        mc alias set local http://localhost:9000 minioadmin minioadmin &&
        mc mb --region=ru-central1 local/rolf-dev || true &&
        tail -f /dev/null
      "
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - ./data/minio_cache_1:/data1
      - ./data/minio_cache_2:/data2

  jaeger:
    image: jaegertracing/all-in-one:1.62.0
    environment:
      COLLECTOR_ZIPKIN_HOST_PORT: 9411
      COLLECTOR_OTLP_ENABLED: 'true'
    ports:
      - '6831:6831/udp' # Thrift UDP (agent)
      - '6832:6832/udp' # Thrift UDP (agent)
      - '5778:5778' # Configuration (agent)
      - '16686:16686' # Jaeger UI
      - '4317:4317' # OTLP gRPC
      - '4318:4318' # OTLP HTTP
      - '14250:14250' # Collector gRPC
      - '14268:14268' # Collector HTTP
      - '14269:14269' # Collector Admin
      - '9411:9411' # Zipkin
    restart: unless-stopped
    volumes:
      - ./data/jaeger:/tmp

  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_USER=myuser
      - POSTGRES_DB=default_nest_database
    ports:
      - '5433:5432'
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  nest:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
    dns:
      - 8.8.8.8
    ports:
      - 3000:3000
      - 50055:50055
    environment:
      - NODE_ENV=development
      - PORT=3000
      - PG_USERNAME=myuser
      - PG_PASSWORD=mypassword
      - PG_DATABASE=default_nest_database
      - PG_SCHEMA=default_nest_schema
      - PG_HOST=postgres
      - PG_PORT=5432
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=redispass
      - REDIS_USERNAME=default
      - RPC_HOST=nest:50055
      - SWAGGER_TITLE=Nest-starter
      - SERVICE_NAME=Nest-starter
      - SWAGGER_DESC=Сервис шаблон
      - HTTP_VERSION_HOST=http://nest:3000
      - GRPC_VERSION_HOST=nest:50055
    volumes:
      - .:/usr/src/app
    depends_on:
      - mongodb
      - redis
      - postgres
      - jaeger
      - kafka

  redis:
    image: redis/redis-stack:latest
    volumes:
      - ./data/redis:/data
    environment:
      REDIS_ARGS: "--requirepass redispass"
    ports:
      - '6379:6379'

  mongodb:
    image: 'mongo:latest'
    ports:
      - '27017:27017'
    volumes:
      - ./data/mongo:/data/db
    environment:
      - MONGODB_DATABASE=db
    restart: unless-stopped

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    expose:
      - "9094"
    links:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://172.17.0.1:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "topic-test:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
